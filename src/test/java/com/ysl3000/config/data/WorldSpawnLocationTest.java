package com.ysl3000.config.data;

import com.ysl3000.config.data.ConfigPosition;
import com.ysl3000.config.data.IConfigPosition;
import com.ysl3000.config.data.WorldSpawnLocation;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

/**
 * Created by ysl3000
 */
public class WorldSpawnLocationTest {


  private WorldSpawnLocation worldSpawnLocation;

  private IConfigPosition iConfigPosition;
  private IConfigPosition iConfigPositionDefault;

  @Before
  public void setUp() {
    this.iConfigPosition = new ConfigPosition("SmartServerWorld", 1337, 144, 42);
    this.iConfigPositionDefault = new ConfigPosition();
    this.worldSpawnLocation = new WorldSpawnLocation(false);

  }

  @Test
  public void getSpawnpointForWorldShouldGenerateValueOnAbsent() {


    Assert.assertFalse(worldSpawnLocation.getWorldSpawns().containsKey("world"));

    IConfigPosition autogeneratedPosition = worldSpawnLocation.getSpawnpointForWorld("world");

    Assert.assertEquals(this.iConfigPositionDefault, autogeneratedPosition);
    Assert.assertTrue(worldSpawnLocation.getWorldSpawns().containsKey("world"));


  }

  @Test
  public void settingTheWorldSpawnShouldWork() {

    Assert.assertFalse(worldSpawnLocation.getWorldSpawns().containsKey("SmartServerWorld"));

    worldSpawnLocation.setSpawnPointForWorld("SmartServerWorld", this.iConfigPosition);

    Assert.assertTrue(worldSpawnLocation.getWorldSpawns().containsKey("SmartServerWorld"));



  }

}
